/*
  Part of BrutusNEXT

  Font definition style sheet.
*/

/*
  How are css classes used:
  
    Css classes correspond to Component class hierarchy in code.
    If you have for example an instance of Window which extends
    DivComponent which extends component, your Window instance
    will have css classes: .Component, .DivComponent and .Window.
    They are applied in this particular order - it means that any
    attributes definied in .Component css class will be overwritten
    by attributes in .DivComponent and .Window css classes - which
    is exactly how javascript inheritance works. In other words,
    css classes defined here extend one another the same way as
    Component classes in code do.

    Css classes are set to instances of Components automatically but
    they are defined in this stylesheet only if necessary so you might
    see that a css class is set to a component in the browser but you
    won't find it here. It just means that all css is inherited from
    parent component classes.

*/

/***************************************************************/
/*                           Fonts                             */
/***************************************************************/

/* Courier New */

@font-face
{
  /* normal */
  font-family: CourierNew;
  src: url(/Fonts/CourierNew.ttf);
}

@font-face
{
  /* bold */
  font-family: CourierNew;
  src: url(/Fonts/CourierNewBold.ttf);
  font-weight: bold;
}

@font-face
{
  /* italic */
  font-family: CourierNew;
  src: url(/Fonts/CourierNewItalic.ttf);
  font-style: italic;
}

@font-face
{
  /* bold italic */
  font-family: CourierNew;
  src: url(/Fonts/CourierNewBoldItalic.ttf);
  font-style: italic;
  font-weight: bold;
}

/***************************************************************/
/*                        Scrollbars                           */
/***************************************************************/

/*
  Scrollbar css only really works in webkit-capable browsers
  (Chrome, Opera, Safari). Sorry, Firefox users...
*/

/* The size of the scrollbar */
::-webkit-scrollbar
{
  width: 9px;
}

/* Fallback in non-webkit browsers */
*
{
  scrollbar-width: thin;
}

/* The scrollbar track's style */
::-webkit-scrollbar-track
{
  box-shadow: inset 0 0 8px rgb(80,100,120);
}

/* The scrollbar handle */
::-webkit-scrollbar-thumb
{
  border-radius: 5px;
  background: rgb(0,0,0);
  box-shadow: inset 0 0 8px rgb(110,150,190);
}

/* Fallback in non-webkit browsers */
*
{
  scrollbar-color: rgb(0,0,0) rgb(80,100,120);
}

/* The scrollbar handle when the browser window is in the background */
/*
::-webkit-scrollbar-thumb:window-inactive
{
  background: rgb(0,0,0);
  -webkit-box-shadow: rgb(110,130,150);
}
*/

/***************************************************************/
/*                        Components                           */
/***************************************************************/

.Component
{
  /* ---- Border, margin, padding and outline ---- */

  /* Count padding and border to the width and height. */
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  border: 0;
  margin: 0;
  padding: 0;
  outline: none;

  /* ------------------- Text -------------------- */

  /* Fonts are saved on the server so we don't need alternatives. */
  font-family: CourierNew;
  text-shadow: 0 1px 0 rgba(0, 0, 0, 0.5);
  color: rgb(210, 230, 250);   /* Text color. */

  /* -------------- Text selection --------------- */

  /* Disable text selection. */
  -khtml-user-select: none;
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  -o-user-select: none;
  user-select: none;

  /* ------------------ Cursor ------------------- */

  /* Set default cursor (otherwise text select cursor would
     appear on components with disabled text selection). */
  cursor: default;
}

.Html
{
  /* Html is the only place where font size should be in pixels.
     All other font sizes should be relative to it using 'rem' units. */
  font-size: 16px;
}

.Body
{
  /* ------------- Size and position ------------- */

  width: 100%;
  height: 100%;
  min-height: 100%;
  min-width: 100%;
  position: absolute;

  /* ------- Children size and positioning ------- */

  display: grid;
  grid-template-columns: repeat(3, 1fr);
  column-gap: 0px;
  grid-template-rows: repeat(2, 1fr);
  row-gap: 0px;
  grid-template-areas:
    "GroupWindow RoomWindow MapWindow"
    "ChatWindow CombatWindow SpamWindow";

  /* ---------------- Background ----------------- */

  /* Background color is only used when background image doesn't work. */
  background-color: black;
  background-image: url(/images/background.jpg);

  /* Following code makes the background image always cover whole area. */
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-position: center; 
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
}

/*
.Text
{
}
*/

.TextLink
{
  text-shadow: "0 1px 0 rgba(0, 0, 0, 0.5)";
  color: rgb(43, 144, 255);    /* Text color. */
}

.TextLink:hover
{
  text-decoration: underline;
  text-decoration-color: rgb(180, 180, 180);
}

.TitleBar
{
  /* ------------- Size and position ------------- */

  grid-area: TitleBar;

  /* ---- Border, margin, padding and outline ---- */

  padding: 0.1rem;

  /* ---------------- Background ----------------- */

  /* Old browsers */
  background: rgba(60, 60, 60, 0.6);
  /* FF3.6-15 */
  background: -moz-linear-gradient(top, rgba(50, 50, 50, 0.6) 0%, rgba(70, 70, 70, 0.6) 5%, rgba(50, 50, 50, 0.6) 90%, rgba(20, 20, 20, 0.6) 100%);
  /* Chrome10-25,Safari5.1-6 */
  background: -webkit-linear-gradient(top, rgba(50, 50, 50, 0.6) 0%, rgba(70, 70, 70, 0.6) 5%, rgba(50, 50, 50, 0.6) 90%, rgba(20, 20, 20, 0.6) 100%);
  /* CSS3 compatible browsers*/  
  background: linear-gradient(rgba(50, 50, 50, 0.6) 0%, rgba(70, 70, 70, 0.6) 5%, rgba(50, 50, 50, 0.6) 90%, rgba(20, 20, 20, 0.6) 100%);

  /* ------------------- Text -------------------- */

  font-weight: bold;
  text-overflow: ellipsis;      /* Add '...' if text overflows. */
  text-align: center;
}

.WindowContent
{
  /* ------------- Size and position ------------- */

  grid-area: WindowContent;

  /* ---- Border, margin, padding and outline ---- */

  padding: 1rem;
}

.Window
{
  /* ---------------- Background ----------------- */

  background-color: rgba(0, 0, 0, 0.3);

  /* ---- Border, margin, padding and outline ---- */

  border-style: ridge;
  border-width: 2px;
  border-color: rgb(50, 50, 50);
}

.TitledWindow
{
  /* ------- Children size and positioning ------- */

  display: grid;
  grid-template-columns: auto;
  column-gap: 0px;
  grid-template-rows: auto 1fr;
  row-gap: 0px;
  grid-template-areas:
    "TitleBar"
    "WindowContent";
}

.CenteredTitledWindow
{
  /* ------------- Size and position ------------- */

  grid-column-start: 1;
  grid-column-end: last-line;
  grid-row-start: 1;
  grid-row-end: last-line;
  justify-self: center;
  align-self: center;
  width: 20rem;
  /* 'vw' means viewport width so this window won't be
     wider than the viewport. */
  max-width: 100vw;
  /* 'vh' means viewport height so this window won't be
     higher than the viewport. */
  max-height: 100vh;
}

.GroupWindow
{
  /* ------------- Size and position ------------- */

  grid-area: GroupWindow;
}

.RoomWindow
{
  /* ------------- Size and position ------------- */

  grid-area: RoomWindow;
}

.MapWindow
{
  /* ------------- Size and position ------------- */

  grid-area: MapWindow;
}

.ChatWindow
{
  /* ------------- Size and position ------------- */

  grid-area: ChatWindow;
}

.CombatWindow
{
  /* ------------- Size and position ------------- */

  grid-area: CombatWindow;
}

.SpamWindow
{
  /* ------------- Size and position ------------- */

  grid-area: SpamWindow;
}

/***************************************************************/
/*                      Svg Components                         */
/***************************************************************/

/*
.SvgComponent
{
}
*/

/*
.SvgGComponent
{
  transform: translate(50%, 50%);
  overflow: visible;
}
*/

/*
.SvgImageComponent
{
  overflow: visible;
}
*/

.MudMap
{
  width: 100%;
  height: 100%;
}

.MapCenterer
{
  /* Disable clipping of svg contents. */
  overflow: visible;
}

.RoomOnMap:hover
{
  fill:white;
}

/* Svg element is only active when lmb is pressed on it
   so this gives visual feedback when element is clicked. */
.RoomOnMap:active
{
  fill:red;
}