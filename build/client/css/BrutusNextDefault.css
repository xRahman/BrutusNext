/*
  Part of BrutusNEXT

  Default client style sheet.
*/

/*
  Implementation notes:
    Stylesheet is organized to statements like this:

      :: Statement ::
  
    Each such statement should contain a unique graphical or
    structural element. To style an element, you assign it a
    css class and then list that class above all statements
    that should apply to that element.
*/

/***************************************************************/
/*                           Fonts                             */
/***************************************************************/

/* Courier New */

@font-face
{
  /* normal */
  font-family: CourierNew;
  src: url(/fonts/CourierNew.ttf);
}

@font-face
{
  /* bold */
  font-family: CourierNew;
  src: url(/fonts/CourierNewBold.ttf);
  font-weight: bold;
}

@font-face
{
  /* italic */
  font-family: CourierNew;
  src: url(/fonts/CourierNewItalic.ttf);
  font-style: italic;
}

@font-face
{
  /* bold italic */
  font-family: CourierNew;
  src: url(/fonts/CourierNewBoldItalic.ttf);
  font-style: italic;
  font-weight: bold;
}

/***************************************************************/
/*                      Global Settings                        */
/***************************************************************/

/* Count padding and border to the width and height of all elements */
*
{
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

/* -------------- Scrollbars ------------- */

/*
  Scrollbar css only works in webkit-capable browsers (Chrome, Opera, Safari).
  Sorry, Firefox users...
*/

/* The size of the scrollbar */
::-webkit-scrollbar
{
  width: 9px;
}

/* The scrollbar track's style */
::-webkit-scrollbar-track
{
  /*-webkit-box-shadow: inset 0 0 6px rgb(80,100,120);*/
  box-shadow: inset 0 0 8px rgb(80,100,120);
}

/* The scrollbar handle */
::-webkit-scrollbar-thumb
{
  border-radius: 5px;
  background: rgb(0,0,0);
  box-shadow: inset 0 0 8px rgb(110,150,190);
}

/* The scrollbar handle when the browser window is in the background */
/*
::-webkit-scrollbar-thumb:window-inactive
{
  background: rgb(0,0,0);
  -webkit-box-shadow: rgb(110,130,150);
}
*/

/* ---------------- <body> --------------- */

/* <body> element is hardcoded in index.html */
.Body
{
  /* '!important' is used so that other style won't overrule this */
	outline: 0 none !important;
  /* Margin is defined to ensure the same behaviour in all browsers */
  margin: 0 !important;
  /* Padding: 0 is defined to ensure the same behaviour in all browsers */
  padding: 0 !important;
  
  width: 100%;
  height: 100%;
	min-height: 100%;
	min-width: 100%;
	position: absolute;
  display: flex;
  background-color: black;
  background-image: url(/images/background-landscape.jpg);

  /* Fonts are saved on server so we don't need alternatives */
	font-family: CourierNew;
  /* Base font size, all other sizes are relative to this */
    /* 
      If we wanted to allow users to change font size, we should
        set this attribute so all fonts scale accordingly.
    */
	font-size: 100%; /* Browser default (usually 16px) */

  /* Following code makes the image always cover whole area */
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-position: center; 
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
}

/***************************************************************/
/*                          Text                               */
/***************************************************************/

/* ---------------- Font ---------------- */

/* :: CourierNew Bold :: */
.G_NoGraphics,
.G_Window,
.G_TitleBar,
.G_Button,
.G_Input,
.G_Checkbox,
.G_LinkText,
.G_SelectablePlate
{
  font-family: CourierNew;
  font-weight: bold;
}

/* ------------ Text Overflow ------------ */

/* :: Text Overflow: Ellipsis :: */
.G_NoGraphics,
.G_Window,
.G_TitleBar,
.G_Button,
.G_Input,
.G_Checkbox,
.G_LinkText,
.G_SelectablePlate
{
  text-overflow: ellipsis; /* Add '...' if text overflows */
}

/* ------------- Text Shadow ------------- */

/* :: Text Shadow :: */
.G_NoGraphics,
.G_Window,
.G_TitleBar,
.G_Button,
.G_Input,
.G_Checkbox,
.G_LinkText,
.G_SelectablePlate
{
  /*text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.5);*/
  text-shadow: 0 1px 0 rgba(0, 0, 0, 0.5);
}

/* -------------- Text color ------------- */

/* :: Default Text Color :: */
.G_NoGraphics,
.G_Window,
.G_TitleBar,
.G_Button,
.G_Checkbox,
.G_LinkText,
.G_SelectablePlate
{
  color: rgb(210, 230, 250); /* Text color */
}

/* Disabled Element Text Color */
.G_Button:disabled
{
  color: rgb(130, 150, 170); /* Text color */
}

/* :: Link Text Color :: */
/*.S_StandaloneWindow_LinkText*/
.G_LinkText
{
  color: rgb(43, 144, 255); /* Text color */
}

/* :: Player Input Text Color :: */
.G_Input
{
  color: rgb(0, 225, 0); /* Text color */
}

/* ----------- Text Decoration ----------- */

/* :: Link Text Mouseover :: */
.G_LinkText:hover
{
  text-decoration: underline;
}

/* -------- Disabled Text Selection ------ */
.S_Window,
.S_WindowTitleBar,
.S_WindowTitle,
.S_WindowContent,
.S_GameWindow,
.S_GameWindow_TitleBar,
.S_GameWindow_Title,
.S_ScrollWindow,
.S_MapWindow,
.S_Form,
.S_Form_Label,
.S_Form_Checkbox,
.S_Form_CheckboxContainer,
.S_Form_ButtonContainer,
.S_RegisterForm_SubmitButton,
.S_RegisterForm_CancelButton,
.S_ChargenForm_SubmitButton,
.S_RegisterForm_CancelButton,
.S_StandaloneWindow,
.S_StandaloneWindow_Title,
.S_StandaloneWindow_TitleBar,
.S_StandaloneWindow_Content,
.S_StandaloneWindow_Text,
.S_StandaloneWindow_LinkText,
.S_StandaloneWindow_LinkContainer,
.S_TermsWindow,
.S_CharlistWindow_Charlist,
.S_CharlistWindow_CharacterPlate
{
  -khtml-user-select: none;
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  -o-user-select: none;
  user-select: none;
}

/* -------- Enabled Text Selection ------ */

.S_ScrollWindowOutput,
.S_ScrollWindowInput,
.S_Form_Input,
.S_TermsWindow_Terms
{
  -khtml-user-select: text;
  -moz-user-select: text;
  -webkit-user-select: text;
  -ms-user-select: text;
  -o-user-select: text;
  user-select: text;
}

/***************************************************************/
/*                           Graphics                          */
/***************************************************************/

/* --------------- Borders --------------- */

/* :: No Border :: */
.G_NoGraphics,
.G_TitleBar,
.G_Checkbox,
.G_LinkText
{
  border: none;
}

/* :: Default Border :: */
.G_Input,
.G_Window
{
  border: 1px ridge rgba(110,130,150,0.8);
}

/* :: Button Border :: */
.G_Button
{
  border: 1px ridge rgba(210, 230, 250, 0.8);
}

/* :: Disabled Button Border :: */
.G_Button:disabled
{
  border: 1px ridge rgba(130, 150, 170, 0.8);
}

/* :: Button Border Highlight :: */
.G_Button:hover:enabled
{
  border: 1px ridge rgba(230, 240, 255, 1);
}

/* :: Selectable Plate Border :: */
.G_SelectablePlate
{
  border: 2px ridge rgba(180, 200, 220, 0.8);
}

/* :: Selectable Plate Border Highlight :: */
.G_SelectablePlate:hover,
.G_SelectablePlate:focus,
.G_SelectablePlate:hover:focus
{
  border: 2px ridge rgba(230, 240, 255, 1);
}

/* -------------- Background ------------- */

/* :: Transparent Background :: */
.G_NoGraphics,
.G_Checkbox,
.G_LinkText
{
  background: rgba(0,0,0,0);  /* Transparent background */
}

/* :: Window Background :: */
.G_Window
{
  background: rgba(0, 0, 0, 0.6);
}

/* :: Input Background :: */
.G_Input,
.G_SelectablePlate
{
  /* Old browsers */
  background: rgba(45, 45, 45, 0.8);
  /* FF3.6-15 */
  background: -moz-linear-gradient(top, rgba(60, 60, 60, 0.8), rgba(30, 30, 30, 0.8));
  /* Chrome10-25,Safari5.1-6 */
  background: -webkit-linear-gradient(top, rgba(60, 60, 60, 0.8), rgba(30, 30, 30, 0.8));
  /* CSS3 compatible browsers*/
  background: linear-gradient(rgba(60, 60, 60, 0.8), rgba(30, 30, 30, 0.8));
}

/* :: Selectable Background with Mouseover :: */
.G_SelectablePlate:hover:not(:focus)
{
  /* Old browsers */
  background: rgba(45, 45, 45, 0.8);
  /* FF3.6-15 */
  background: -moz-linear-gradient(top, rgba(60, 60, 60, 0.8), rgba(30, 30, 30, 0.8));
  /* Chrome10-25,Safari5.1-6 */
  background: -webkit-linear-gradient(top, rgba(60, 60, 60, 0.8), rgba(30, 30, 30, 0.8));
  /* CSS3 compatible browsers*/
  background: linear-gradient(rgba(90, 90, 90, 0.8), rgba(60, 60, 60, 0.8));
  /*background: linear-gradient(rgba(60, 60, 60, 1), rgba(30, 30, 30, 1));*/
}

/* :: Button Background :: */
.G_Button
{
  /* Old browsers */
  background-color: rgba(145, 145, 145, 0.8);
  /* FF3.6-15 */
  background: -moz-linear-gradient(top, rgba(170, 170, 170, 0.8), rgba(120, 120, 120, 0.8));
  /* Chrome10-25,Safari5.1-6 */
  background: -webkit-linear-gradient(top, rgba(170, 170, 170, 0.8), rgba(120, 120, 120, 0.8));
  /* CSS3 compatible browsers*/
  background: linear-gradient(rgba(170, 170, 170, 0.8), rgba(120, 120, 120, 0.8));
}

/* Button Background when Mouseover :: */
.G_Button:hover:enabled
{
  /* Old browsers */
  background: rgba(175, 175, 175, 0.8);
  /* FF3.6-15 */
  background: -moz-linear-gradient(top, rgba(200, 200, 200, 0.8), rgba(150, 150, 150, 0.8));
  /* Chrome10-25,Safari5.1-6 */
  background: -webkit-linear-gradient(top, rgba(200, 200, 200, 0.8), rgba(150, 150, 150, 0.8));
  /* CSS3 compatible browsers*/
  background: linear-gradient(rgba(200, 200, 200, 0.8), rgba(150, 150, 150, 0.8));
}

/* :: Title Bar Background :: */
.G_TitleBar
{
  /* Old browsers */
  background: rgba(80, 80, 80, 0.6);
  /* FF3.6-15 */
  background: -moz-linear-gradient(top, rgba(80, 80, 80, 0.6) 0%, rgba(110, 110, 110, 0.6) 5%, rgba(60, 60, 60, 0.6) 90%, rgba(30, 30, 30, 0.6) 100%);
  /* Chrome10-25,Safari5.1-6 */
  background: -webkit-linear-gradient(top, rgba(80, 80, 80, 0.6) 0%, rgba(110, 110, 110, 0.6) 5%, rgba(60, 60, 60, 0.6) 90%, rgba(30, 30, 30, 0.6) 100%);
  /* CSS3 compatible browsers*/
  background: linear-gradient(rgba(80, 80, 80, 0.6) 0%, rgba(110, 110, 110, 0.6) 5%, rgba(60, 60, 60, 0.6) 90%, rgba(30, 30, 30, 0.6) 100%);
}

/* ------------- Box Shadow -------------- */

/* :: Selectable Background with Focus :: */
.G_SelectablePlate:focus
{
  -webkit-box-shadow:inset 0 0 0.8em 0.1em rgba(210, 230, 250, 1);
  -moz-box-shadow: inset 0 0 0.8em 0.1em rgba(210, 230, 250, 1);
  box-shadow:inset 0 0 0.8em 0.1em rgba(210, 230, 250, 1);
}

/* --------------- Outline --------------- */

/*
  IMPORTANT:
    In order for outline to be drawn properly, there must
  be space around the component for it - either margin in
  component to be outlined or padding in parent component.
    The best way to do it is to put component to be outlined
  in another div with padding equal to the desired with of
  the outline.
*/

/* :: No Outline :: */
.G_NoGraphics,
.G_NoGraphics:focus,
.G_Window,
.G_Window:focus,
.G_TitleBar,
.G_TitleBar:focus,
.G_Button,
.G_Button:focus,
.G_Checkbox,
.G_Checkbox:focus,
.G_LinkText,
.G_LinkText:focus,
.G_SelectablePlate,
.G_SelectablePlate:focus,
.G_Input
{
  outline: none;
}

/* :: Focused Outline :: */
.G_Input:focus
{
  outline: solid 1px rgba(30, 30, 255, 0.8);
}

/*
.G_SelectablePlate:focus
{
  outline: solid 2px rgba(30, 30, 255, 0.8);
}
*/

/***************************************************************/
/*                          Structure                          */
/***************************************************************/

/* -------------- Nonstandard Font Size -------------- */

/* :: Small Font Size :: */
.S_StandaloneWindow_Text,
.S_StandaloneWindow_LinkText,
.S_Form_Label,
.S_GameWindow_Title,
.S_CharlistWindow_CharacterPlateLabelSmall
{
  font-size: 0.8em;
}

/* :: Large Font Size :: */
.S_CharlistWindow_CharacterPlateLabelBig
{
  font-size: 1.2em;
}

/* ------------- Component --------------- */

/* :: Full Width Inline Block :: */
.S_StandaloneWindow_Text,
.S_Form_ButtonContainer,
.S_Form_Label
{
  width: 100%;
  height: auto;
  display: inline-block;
}

/* :: Full Width Small Empty Line */
.S_Form_EmptyLine,
.S_StandaloneWindow_EmptyLine
{
  width: 100%;
  height: 0.6em;
  display: block;
}

/* --------------- Window ---------------- */

/* :: Default Window :: */
.S_Window,
.S_ScrollWindow,
.S_MapWindow,
.S_GameWindow
{
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
}

/* :: Default Window Size :: */
.S_Window,
.S_GameWindow
{
  width: 20%;
  height: 20%;
}

/* :: Default Window Title Bar :: */
.S_WindowTitleBar,
.S_GameWindow_TitleBar,
.S_StandaloneWindow_TitleBar
{
  width: 100%;
  height: auto;
  margin: 0;
}

/* :: Default Window Title :: */
.S_WindowTitle,
.S_StandaloneWindow_Title
{
  text-align: center;
  width: 100%;
  height: 100%;
  padding: 0.4em;
  display: block;
}

/* :: Default Window Content :: */
.S_WindowContent
{
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
}

/* :: Center At Screen :: */
.S_StandaloneWindow,
.S_TermsWindow
{
  /* Center at position 50% from top, 50% from left */
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/* ------------- Game Window ------------- */

/* :: Game Window Title :: */
.S_GameWindow_Title
{
  text-align: center;
  width: 100%;
  height: 100%;
  padding: 0.1em;
  display: block;
}

/* --------------- ScrollWindow --------------- */

/* :: Scroll Window Size :: */
.S_ScrollWindow
{
  width: 60%;
  height: 80%;
}

/* :: Scrollable Output :: */
.S_ScrollWindowOutput,
.S_TermsWindow_Terms,
.S_CharlistWindow_Charlist
{
  width: 100%;
  height: 100%;
  overflow-x: hidden;   /* Do not use horizontal scrolling */
  overflow-y: auto;     /* Automatically create vertical scrollbar */
}

/* :: Scroll Window Output Text Display Properties :: */
.S_ScrollWindowOutput
{
  padding: 0.2em;
  word-wrap: break-word; /* Break long words that wont fit */
}

/* :: Scroll Window Input :: */
.S_ScrollWindowInput
{
  width: 100%;
  height: auto;
  padding: 0.2em;
  resize: none; /* Disable the "grabger" corner which resizes the textarea */
  overflow: hidden; /* also hides the scrollbar */
}

/* ---------------- MapWindow --------------- */

/* :: Map Window Size :: */
.S_MapWindow
{
  width: 40%;
  height: 40%;
}

/* ------------- Standalone Window ------------- */

/* :: Standalone Window :: */
.S_StandaloneWindow
{
  /* Window size is a multiple of font size */
  width: 20em;
  height: auto; /* Resize by content */
  max-width: 100%;
  max-height: 100%;
  overflow: auto; /* Enable scroll if needed */
  display: block;
}

/* :: Standalone Window Content :: */
.S_StandaloneWindow_Content
{
  padding: 1em;
  display: block;
}

/* :: Standalone Window Text :: */
.S_StandaloneWindow_Text,
.S_StandaloneWindow_LinkText
{
  margin: 0;
  padding: 0;
  text-align: left;
  display: inline;
}

/* :: Standalone Window Link Container :: */
.S_StandaloneWindow_LinkContainer
{
  width: 100%;
  height: auto;
  display: block;
}

/* --------------- Terms Window ---------------- */

/* :: Terms Window :: */
.S_TermsWindow
{
  /* Window size is a multiple of font size */
  width: 30em;
  height: 25em;
  max-width: 100%;
  max-height: 100%;
  display: flex;
  flex-direction: column;
}

/* :: Terms Window Terms Text Properties :: */
.S_TermsWindow_Terms
{
  padding: 1em;
  text-align: justify;
}

/* -------------- Charlist Window -------------- */

/* :: Charlist Window Character List :: */
.S_CharlistWindow_Charlist
{
  margin-top: 0.5em;
  margin-bottom: 0.5em;
  height: 16em;
}

.S_CharlistWindow_CharacterPlateContainer
{
  width: 100%;
  height: auto;
  padding-left: 0.3em;
  padding-right: 0.3em;
  margin-top: 0.3em;
  margin-bottom: 0.3em;
}

/* :: Charlist Window Character Plate :: */
.S_CharlistWindow_CharacterPlate
{
  width: 100%;
  height: auto;
  padding: 0.8em;
  display: flex;
}

/* :: Charlist Window Character Plate Label :: */
.S_CharlistWindow_CharacterPlateLabelBig,
.S_CharlistWindow_CharacterPlateLabelSmall
{
  width: 100%;
  display: inline-block;
}

/* :: Charlist Window Portrait :: */
.S_CharlistWindow_Portrait
{
  /* Image will be scaled to this size. */
  width: 4em;
  height: 4em;
}

/* :: Charlist Window Labels Container :: */
.S_CharlistWindow_LabelsContainer
{
  width: 100%;
  padding-left: 0.5em;
  padding-right: 0.5em;
}

/* ----------------- Form ---------------- */

/* :: Form :: */
.S_Form
{
  width: 100%;
  height: 100%;
}

/* :: FormInput :: */
.S_Form_Input
{
  width: 100%;
  height: 100%;
  padding-top: 0.3em;
  padding-bottom: 0.3em;
  padding-left: 0.6em;
  padding-right: 0.6em;
}

/* :: Full Width Button :: */
.S_Component_FullWidthButton
{
  width: 100%;
  height: auto;
}

/* TODO: Better checkbox graphics. */
/* :: Form Checkbox :: */
.S_Form_Checkbox
{
  width: auto;
  height: auto;
}

/* :: Form Checkbox Container :: */
.S_Form_CheckboxContainer
{
  width: 100%;
  height: auto;
}

/* -------------- Register Form --------------- */

/* :: Form Short Submit Button :: */
.S_RegisterForm_SubmitButton,
.S_ChargenForm_SubmitButton
{
  width: 60%;
  float: left;
}

/* :: Form Short Cancel Button :: */
.S_RegisterForm_CancelButton,
.S_ChargenForm_CancelButton
{
  width: 35%;
  float: left;
  margin-left: 5%;
}

/***************************************************************/
/*                             Svg                             */
/***************************************************************/

/* ------------ Map (svg element) ----------- */

/* Map root svg element */
.SvgMap
{
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
	/*min-height: 100%;*/
	/*min-width: 100%;*/
  /*background-color: beige;*/
}

/* Svg <circle> representing a room */
.SvgRoom
{
  margin: 0;
  padding: 0;
  /* Note: stroke color is set programatically (it depends on terrain) */
  stroke-width: 1.5;
  /* Use 'transparent', not 'none' (so the whole area interacts with mouse) */
  /*fill: transparent;*/
  fill: black;
}

/* Room when mouseovered */
.SvgRoom:hover
{
  margin: 0;
  padding: 0;
  /* Note: stroke color is set programatically (it depends on terrain) */
  stroke-width: 3;
  /* Use 'transparent', not 'none' (so the whole area interacts with mouse) */
  /*fill: transparent;*/
  fill: black;
}

/* Svg <circle> representing a nonexistent room */
.SvgNonexistentRoom
{
  margin: 0;
  padding: 0;
  /* Note: stroke color is set programatically (it depends on terrain) */
  stroke: rgb(80, 80, 80);
  stroke-width: 1.5;
  stroke-opacity: 0.8;
  /* Use 'transparent', not 'none' (so the whole area interacts with mouse) */
  fill: black;
}

/* Nonexistent room when mouseovered */
.SvgNonexistentRoom:hover
{
  margin: 0;
  padding: 0;
  /* Note: stroke color is set programatically (it depends on terrain) */
  stroke: rgb(100, 100, 100);
  stroke-width: 3;
  stroke-opacity: 0.8;
}

/* Nonexistent room when selected (= it is being edited) */
.SvgSelectedNonexistentRoom
{
  margin: 0;
  padding: 0;
  /* Note: stroke color is set programatically (it depends on terrain) */
  stroke: rgb(80, 80, 80);
  stroke-width: 1.5;
  stroke-opacity: 0.8;
  /* Use 'transparent', not 'none' (so the whole area interacts with mouse) */
  fill: grey;
}

/* Svg <line> representing an exit when mouseovered */
.SvgExit:hover
{
  margin: 0;
  padding: 0;
  /* Note: stroke color is set programatically (it depends on terrain) */
  stroke-width: 3;
}

/* Svg <line> representing an exit */
.SvgExit
{
  margin: 0;
  padding: 0;
  /* Note: stroke color is set programatically (it depends on terrain) */
  stroke-width: 2;
}

/* Svg <polygon> representing exit up or down */
.SvgVerticalExit
{
  margin: 0;
  padding: 0;
  /* Note: fill color is set programatically (it depends on terrain) */
  /* Note: stroke color is set programatically (it depends on terrain) */
  stroke-width: 0.8;
}