============================================================
 BIG TODO: Nedělat nic, co nepotřebuju na funkční prototyp!
============================================================

TARGET:
- posílám automaticky serializovaný pakety (entity)
- savuju entity na disk
- na klientovi mám komponenty, okna
- funguje registrace playerů
- mám zónu, v ní roomy
- hraju si se zobrazením minimapy
- klikací editor mapy
  - nejdřív jen nové roomy
  - pak editace properties stávajících room
  - pak prototypová dědičnost room a přiřazování prototypu
    v editoru

------------------------------------------------------------------------------

Aktuální TODO:
- zobrazit jedno konkrétní okno (asi to, co se zobrazuje jako první,
  tj. nejspíš loginWindow).
- potom řešit app state a to, kdy se má co zobrazovat.

TODO: Updatnout client-side npm moduly

------------------------------------------------------------------------------

Css
----

Zvážit resetování css pro každou komponentu pomocí:

.module
{
  all: initial;
}

https://css-tricks.com/almanac/properties/a/all/

- Asi by se pak musel nastavovat font pro každou komponentu,
  ale to by snad nemuselo vadit (dal bych je někam na jedno místo
  a všude je importoval).


IDEA: Možná by taky nebylo od věci mít nějakej "default" pro css values,
  podobně jako mám defaultní hodnoty pro property attributes.

CSSStyleDeclaration:
https://www.javascripture.com/CSSStyleDeclaration

TODO: Používat všude grid místo flexboxu.
- např. ve Window

---------------------

Setování elementu do component.
- určitě v konstruktoru, pak nemusím řešit, jestli existuje. Čili stopro
  se bude přeávat konstruktoru předka.

Setování css při vytváření componenty
- asi ho setnout rovnou při vytváření elementu, tzn. v konstruktoru Component
  nevolat setCss().

TODO: Potřebuju vůbec classy Body a Html?
- asi by stačilo v Gui setnout 'body' elementu css.
- to samý pro Html.


------------------------------------------------------------------------------

Socket class hierarchy
------------------------

TODO: Vymyslet, kam dát metody na zpracování packetů.

------------------------------------------------------------------------------

FatPriotityQueue
-----------------

TS verze fastpriorityqueue:

- kašlat na ni, už mám vyrobenou klient verzi z té javascriptové
  (ale asi by ji to chtělo updatnout z aktuální verze).

https://github.com/voxeline/FastPriorityQueue.ts
https://github.com/ddurschlag6river/TypedPriorityQueue/tree/tsport

https://github.com/lemire/TypedFastBitSet.js
- tohle je kupodivu javascript, ale i tak je to asi lepší než fastbitset

TODO: Potřebuju vůbec fast priority queue serializovat?
  - popravdě asi ne, to by měla vždycky bejt runtime záležitost

------------------------------------------------------------------------------

Juju mapper:
-------------

http://www.mudportal.com/forum/support/22-jujumapper-open-beta


------------------------------------------------------------------------------

Zákaz spouštění package skriptů v npm:
---------------------------------------

npm config set ignore-scripts true


