============================================================
 BIG TODO: Nedělat nic, co nepotřebuju na funkční prototyp!
============================================================

TARGET:
- posílám automaticky serializovaný pakety (entity)
- savuju entity na disk
- na klientovi mám komponenty, okna
- funguje registrace playerů
- mám zónu, v ní roomy
- hraju si se zobrazením minimapy
- klikací editor mapy
  - nejdřív jen nové roomy
  - pak editace properties stávajících room
  - pak prototypová dědičnost room a přiřazování prototypu
    v editoru

Trochu změna: Mapa first

How much to do in this batch?
- určitě zobrazit víc místností a exity mezi nimi.
- mouseover a selection na roomu a exitu
- "naklikávání" mapy (zatím bez vyrábění dat na serveru)
  - čistě edit mód, jinej zatím vůbec neuvažovat.
------------------------------------------------------------------------------

TODO: Vytvořit WorldSvg

TODO: Event hnadler ve WorldSvg

TODO: Zrušit Svg komponenty pro Roomy a Exity, udělat z toho elementy
  ve WorldSvg

TODO: Výpočet, kolik room je třeba zobrazovat

TODO: Nevytvářet roomy podle rozměrů worldu, ale podle počtu, kolik je třeba
  zobrazovat.

TODO: Cashování room elementů při updatu mapy
- nejdřív se checkne, který nemají být vidět, ty se hidnou a hoděj do seznamu
  komponent v cashi.
- pak se projdou roomy, který mají bejt vidět a nejsou, ale elementy se pro ně
  nebudou vyrábět - místo toho se vezmou z cashe, nastaví se jim pozice,
  grafika atd. a odhidnou se.

TODO: Udělat zátěžovej test renderování hromady kruhů v Pixi.js
  http://scottmcdonnell.github.io/pixi-examples/index.html?s=basics&f=graphics.js&title=Graphics
- udělal jsem a nic moc, s miliónem circlů má taky problémy (nejen je vyrobit, ale i rendering nic moc).
- část problému je, že pixi.js nemá automatickej culling (takže si tím moc nepomůžu).

TODO: Parametrizovat rozměry světa
- hmm, ony to vlastně nejsou rozměry světa, ten žádnej limit nemá
  (respektive je to MAX_INT, nebo tak něco). Je to "zábě" editoru.
- nicméně svět rozměry má, je to velikost gridu. Tj. ideálně by mapa
  měla koukat na nějaký minimální rozměry a když je svět větší, tak
  koukat na celej svět.
=> Nechám v gridu automatický počítání velikosti a přidám
  velikost do World. Z tý si to bude brát Gui.updateMap().
- tak nakonec ne. Nechám size jen v gridu, ať nemám nekonzistentní data.
  Bude mít výchozí defaultní hodnotu, která se může zvětšit, když někdo
  přidá roomu mimo výchozí oblast.

TODO: V createMap() v cyklu na vyrábění mapy oasertovat krajní hodnoty cyklu,
 abych nemohl vyrobit nekonečnej cyklus.

TODO: Zjistit, kolik room by se mělo maximálně zobrazovat najednou.
  (mapa přes celý okno a maximální zoon out).
- 200x200 je v pohodě i v aktuálním max zoomu, ale to je 40.000 room
  80x80 je přes celou obrazovku v zoom factoru 0.5 (což je rozumný minimum)
- asi by se to dalo dynamicky počítat z rozestupů room a rozměrů map window
  (respektive mapSvg komponenty).
Další test:
  rychlost rendoerování 500x500 room nehledě na rychlost loadování - SUCKS.
  (a zabere to 2 GB paměti)
=> Rozhodně nemůžu nasypat celej World do DOM, respektive teda určitě ne
  všechny placeholdery na vyrábění roomů. Očividně to nemá clipování.
TODO: Ještě zkusit renderovat to hidnutý.
  Result: Když je v DOM 500x500 romů a viditelných je jen 10x10, tak to pořád
  zoomuje trhaně.
=> Setovat display: none tudíž nestačí.

TODO: V konstruktorech komponent dát parentům typ rodiče, ať se přes
  this.parent dají volat jeho metody.

TODO: Líp vyřešit leftClick a rightClick
  (nelíbí se mi, že se různý eventy handlujou různě)
- asi na to v Component udělat funkci assignEventHandler()
  (nebo registerEventHandler()) a tý předat typ eventu
  a handler s tím, že ona si uvnitř pořeší setnutí handleru
  na element, případně pseudo event na right click.
Ono teda popravdě přiřazovat ty handlery přímo na this.element
  bude možná nakonec nejpřehlednější. A navíc je to pure javascript,
  takže se dá celkem snadno vygooglit, jak se to dělá.

TODO: U "line" nedává smysl setPosition().

TODO: Parametrizovat rozestupy místností 

TODO: Room.PIXEL_SIZE hodit zpět někam do GUI
  (A je to spíš ROOM_SPACING).
  Rooma může mít klidně velikost, ale relativně (small, medium, large).
  (A hlavně to nemusím řešit teď).

TODO: Ještě přece jen zvážit, že by se event handlery věšely rovnou
  na komponentu.
- mohly by to bejt settery, takže by se jmenovaly stejně jako v javascriptu
  (onclick atp.). Prostě by to jen provovaly na this.element.
Sounds good.
TODO: Když už v tom budu, tak můžu handlery automaticky obalovat
  odchytáváním a reportováním exceptionů (což je dobro).
IDEA: Možná bych pak vůbec nemusel exceptiony v handlerech ošetřovat, dělalo
  by se to automaticky.

TODO: Odchytávat exeptiony v RoomSvg (nebo možná spíš v navěšování handlerů
  v Component).

TODO: Mazání exitů pravým myšítkem
TODO: Mazání exitů dragováním pravým myšítkem

TODO: :hover pro exity (a možná i černej background).
  - Na to asi budu potřebovat Componentu, abych jí mohl dát separátní css
    (kdybych setoval css celýmu RoomSvg, měnil bych tím obě čáry).

TODO: Ještě jednou se zamyslet nad strukturou mapy
- potřebuju nutně kořenovou svg komponentu MapSvg?
  Teď už ano, je na ni navěšený zoomování.
- možná by se hodila komponenta pod MapZoomerem, do které se budou dávat
  Roomy a exity. Možná World?
  - mohl by v ní bejt třeba rozestup roomů (v MapZoomeru to moc nedává smysl)

TODO: Vymyslet, jak zobrazovat exity up a down

Asi nějak takhle:

  .
 /|\
  |
  |
 /
/

TODO: Zprovoznit editaci víc než jedný vrstvy
- bude třeba "chození up a down" (a obecně asi chození po mapě, teď
  se dá zobrazit jen omezenej výřez).

TODO: V Gui asi míchám moc responsibility dohromady.
- je to stavovej automat
- vyrábí to svg mapy
  - to by asi měla dělat svg komponenta s mapou. Gui na ni může mít odkaz.

------------------------------------------------------------------------------

Výhledové TODO
---------------

TODO: Na editaci by se asi hodilo mít větší ikony room, aby se na ně líp
  trefovalo (zase to pak bude vypadat jinak než hra, to asi není dobře).

TODO: Přezoomování na jiný místo (tj. zoomIn() bude zároveň mapu centerovat
  na pozici myši).

TODO: Vymyslet, jak zobrazovat jednosměrné exity
  Tohle zatím nepotřebuju, beztak budu chtít spíš buildit obousměrný exity.

TODO: Až budu dělat teleporty (exity na větší vzdálenost než 1), tak do cílové
  roomy dát seznam místností, odkud se do ní dá teleportovat (mimo jiné
  kvůli tomu, aby se při smazání roomy daly invalidovat exity, který do ní
  vedou (setjnout jim 'to' na 'nowhere').

TODO: Výhledově by mělo bejt v editoru undo.

TODO: Zamyslet se nad exity do neexistujících místností
- v edit módu je to blbost, ale v mapper módu player vidí,
  že je v daném směru exit, ale ještě neví, kam vede.
Good point - řeším zbývající jednosměrné exity po smazání roomy, to s tím
  souvisí.
- Asi by měl přibýt třetí stav exitu, tj. kromě one-way a two-way by mělo
    být něco jako "at least one-way"
  To ale budu řešit až v rámci automap módu.

Change color of svg:
https://css-tricks.com/change-color-of-svg-on-hover/

Room
-----

Ikona - svg image
  - tvar (square, circle) 

Exit
-----

Exit line (svg line)
Exit outline (širší svg line pod ní. Nebo možná outline attribute?)
Exit highlight (možná drop shadow?)



Workaround jak přidat outlinu k svg image:

#note-0 {
    outline: 6px solid white;
}

Možná drop-shadow přes filtry:
https://stackoverflow.com/questions/6088409/svg-drop-shadow-using-css3


------------------------------------------------------------------------------

Code counter extension:
https://marketplace.visualstudio.com/items?itemName=uctakeoff.vscode-counter

------------------------------------------------------------------------------

TODO: V title baru nefunguje "text-overflow: ellipsis;"
- tohle zatím odložím.
    Titlebar se roztahuje podle velikosti textu, takže ellipsis tam není
  potřeba, ale časem to určitě potřeba bude.

------------------------------------------------------------------------------

Socket class hierarchy
------------------------

TODO: Vymyslet, kam dát metody na zpracování packetů.


------------------------------------------------------------------------------

Zákaz spouštění package skriptů v npm:
---------------------------------------

npm config set ignore-scripts true


