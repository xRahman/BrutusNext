============================================================
 BIG TODO: Nedělat nic, co nepotřebuju na funkční prototyp!
============================================================

TARGET:
- posílám automaticky serializovaný pakety (entity)
- savuju entity na disk
- na klientovi mám komponenty, okna
- funguje registrace playerů
- mám zónu, v ní roomy
- hraju si se zobrazením minimapy
- klikací editor mapy
  - nejdřív jen nové roomy
  - pak editace properties stávajících room
  - pak prototypová dědičnost room a přiřazování prototypu
    v editoru

Trochu změna: Mapa first

------------------------------------------------------------------------------

Aktuální TODO:
- začít experimentovat s Map Window.

TODO: Data pro pár roomů a exitů
- koordináty v gridu
  - X a Y musej bejt celý čísla
  - Z nutně ne, ale platí, že v každém celočíselném intervalu může bejt
    jen jedna rooma (tj. efektivně i z je celočíselné + může mít offset).
    A offset stejně teď nemám jak zobrazit, takže na něj sere pes a bude
    i Z fixně.

TODO: Transformace do mapovejch dat
- map data jsou 2d, tj. čtvercová síť. Jsou v ní roomy, který se maj
  zobrazit - ne nutně jen řez gridem, můžou se zobrazovat i roomy co jsou níž.
- můžou tam bejt odkazy na roomy v gridu
- exity do 10 směrů.

Exity by to chtělo mít separátně, jeden objekt pro každej exit, abych je
  mohl vykreslit v jednom průchodu.


 \|/  \|/  \|/  \|/  \|/  \|/  \|
--x----x----x----x----x----x----x
 /|\  /|\  /|\  /|\  /|\  /|\  /|
  | \/ | \/ | \/ | \/ | \/ | \/ |
  | /\ | /\ | /\ | /\ | /\ | /\ |
  |/  \|/  \|/  \|/  \|/  \|/  \|
--x----x----x----x----x----x----x
 /|\  /|\  /|\  /|\  /|\  /|\  /|
  | \/ | \/ | \/ | \/ | \/ | \/ |
  | /\ | /\ | /\ | /\ | /\ | /\ |
  |/  \|/  \|/  \|/  \|/  \|/  \|
--x----x----x----x----x----x----x

IDEA: Rozdělit to na několik seznamů, vždycky existy v jednom směru:
- n/s
- e/w
- nw/se
- sw/ne
Pokud je mapa čtvercová, tak mi vlastně u každýho exitu stačí vědět,
  kolikátej v pořadí je (což je pořadí v poli). Podle toho dopočítám,
  ke kterejm roomám vede.
(Teleportační exity nechám zatím bejt.)
  Tzn. když budu mít N/X roomů, tak potřebuju N-1 exitů od každýho za 4 typů.
- Je teda otázka, jesltli je potřeba mít celou síť exitů, i když se jich
  většina nebude zobrazovat (pro editaci asi jo), ale můžu tohle použít
  minimálně na indexaci exitů (tj. nasypu je třeba do hashmapy a budu je
  indexovat číslem, který by měly v plný síti).

TODO: Zobrazení mapovejch dat

------------------------------------------------------------------------------

TODO: state by asi měl bejt jinde než ve Windows. Application?

TODO: V title baru nefunguje "text-overflow: ellipsis;"

------------------------------------------------------------------------------

Css
----

CSSStyleDeclaration:
https://www.javascripture.com/CSSStyleDeclaration

Guide to css grid:
https://css-tricks.com/snippets/css/complete-guide-grid/

------------------------------------------------------------------------------

Socket class hierarchy
------------------------

TODO: Vymyslet, kam dát metody na zpracování packetů.

------------------------------------------------------------------------------

FatPriotityQueue
-----------------

TS verze fastpriorityqueue:

- kašlat na ni, už mám vyrobenou klient verzi z té javascriptové
  (ale asi by ji to chtělo updatnout z aktuální verze).

https://github.com/voxeline/FastPriorityQueue.ts
https://github.com/ddurschlag6river/TypedPriorityQueue/tree/tsport

https://github.com/lemire/TypedFastBitSet.js
- tohle je kupodivu javascript, ale i tak je to asi lepší než fastbitset

TODO: Potřebuju vůbec fast priority queue serializovat?
  - popravdě asi ne, to by měla vždycky bejt runtime záležitost

------------------------------------------------------------------------------

Juju mapper:
-------------

http://www.mudportal.com/forum/support/22-jujumapper-open-beta


------------------------------------------------------------------------------

Zákaz spouštění package skriptů v npm:
---------------------------------------

npm config set ignore-scripts true


