============================================================
 BIG TODO: Nedělat nic, co nepotřebuju na funkční prototyp!
============================================================

TARGET:
- posílám automaticky serializovaný pakety (entity)
- savuju entity na disk
- na klientovi mám komponenty, okna
- funguje registrace playerů
- mám zónu, v ní roomy
- hraju si se zobrazením minimapy
- klikací editor mapy
  - nejdřív jen nové roomy
  - pak editace properties stávajících room
  - pak prototypová dědičnost room a přiřazování prototypu
    v editoru

Trochu změna: Mapa first

How much to do in this batch?
- určitě zobrazit víc místností a exity mezi nimi.
- mouseover a selection na roomu a exitu
- "naklikávání" mapy (zatím bez vyrábění dat na serveru)
  - čistě edit mód, jinej zatím vůbec neuvažovat.
------------------------------------------------------------------------------

TODO: Prozatím navrdo setnuté rozměry světa.

TODO: Data pro exity
  - potřebuju classu Exit a musí mít idčko (klidně ho nafakovat).
  - v roomě potřebuju 10 odkazů do příslušných směrů

TODO: Zobrazení exitů

TODO: Naklikávání exitů


TODO: Vyrábění room dragnutím přes ně
 (ostatně když někam vyrobím exit, tak tak zjevně chci i roomu, že)

TODO: V konstruktorech komponent dát parentům typ rodiče, ať se přes
  this.parent dají volat jeho metody.

TODO: Líp vyřešit leftClick a rightClick
  (nelíbí se mi, že se různý eventy handlujou různě)
- asi na to v Component udělat funkci assignEventHandler()
  (nebo registerEventHandler()) a tý předat typ eventu
  a handler s tím, že ona si uvnitř pořeší setnutí handleru
  na element, případně pseudo event na right click.
Ono teda popravdě přiřazovat ty handlery přímo na this.element
  bude možná nakonec nejpřehlednější. A navíc je to pure javascript,
  takže se dá celkem snadno vygooglit, jak se to dělá.

TODO: U "line" nedává smysl setPosition().

TODO: Parametrizovat rozestupy místností

TODO: Udělat Exit.nowhere(), což vrátí instanci exitu, kterej nikam nevede.
  Důvod: Časem bude potřeba look description v daném směru a bude lepší, když
    to bude ve standarní struktuře exitů.
  (exit to "Nowhere").

TODO: Rozdělit funkci na distance a direction
  (direction hodí exception když je distance 0).

TODO: Room.PIXEL_SIZE hodit zpět někam do GUI
  (A je to spíš ROOM_SPACING).
  Rooma může mít klidně velikost, ale relativně (small, medium, large).
  (A hlavně to nemusím řešit teď).

TODO: Editor přejmenovat na MapEditor

TODO: Pořešit error handling v RoomSvg

TODO: Ještě přece jen zvážit, že by se event handlery věšely rovnou
  na komponentu.
- mohly by to bejt settery, takže by se jmenovaly stejně jako v javascriptu
  (onclick atp.). Prostě by to jen provovaly na this.element.
Sounds good.
TODO: Když už v tom budu, tak můžu handlery automaticky obalovat
  odchytáváním a reportováním exceptionů (což je dobro).
IDEA: Možná bych pak vůbec nemusel exceptiony v handlerech ošetřovat, dělalo
  by se to automaticky.

TODO: Odchytávat exeptiony v RoomSvg (nebo možná spíš v navěšování handlerů
  v Component).

TODO: Zkusit updatnout eslint, jestli neopravili chybu s export let x;
  (Editor.lastSelectedCoords).

TODO: V RoomSvg.onMouseEnter() vyrábět exit pouze pokud ještě není
  vyrobenej (respektive hlavně nepřegenerovávat mapu, pokud už exit
  existuje, protože pak se pořád dokola posílá onmouseenter);

TODO: Do event handlerů v RoomSvg dát funkce popisující, co se vlastně dělá.

TODO: V RoomSvg místo Editor.areAdjacentCoords zavolat rovnou
  Coords.areAdjacent() (bude ji třeba napsat místo Coords.distance().

TODO: "No change was required" zkrátit na "No change" (to samý druhá hodnota)

TODO: Ze statickým metod v Coords, které nemusí být statické, udělat
  instanční metody

TODO: Assert, že vytvářenej exit nevede do stejný roomy

TODO: Mazání roomy nemaže exity.
- hmm a kdo ví, jestli to vůbec smaže to roomu. Když do ní totiž vedou
  exity, tak se v nich na ni drží reference.
  - aha, jasně. To znamená, že se asi dál vykreslujou jendosměrný exity.
Možná by exity měly přece jen vést na coords a ne na roomu.
- alternativně budu muset při mazání roomu odmazat ze všech room, které
  do ní mají exit - což může bejt problém zjistit, pokud budou existovat
  exity "na dálku".
- Exity směřované na coords taky vyřeší problém u automapy, že exit vede
  do neprozkoumané místnosti.

TODO: Exity směřovat na Coords místo na Room

TODO: Vymyslet, jak mazat exity (nějak pohodlnějš než editací roomy).
  - Asi to spojit se změnou metody mazání místností (obojí deletem při
    mouseoveru). Díky tomu půjde dát na pravý myšítko něco jinýho (nejspíš
    editace roomu).
TODO: :hover pro exity (a možná i černej background).
  - Na to asi budu potřebovat Componentu, abych jí mohl dát separátní css
    (kdybych setoval css celýmu RoomSvg, měnil bych tím obě čáry).

TODO: Zoomování mapy kolečkem myši

TODO: Na editaci by se asi hodilo mít větší ikony room, aby se na ně líp
  trefovalo.

TODO: Výhledově by mělo bejt v editoru undo.

------------------------------------------------------------------------------

TODO: Zamyslet se nad exity do neexistujících místností
- v edit módu je to blbost, ale v mapper módu player vidí,
  že je v daném směru exit, ale ještě neví, kam vede.
Good point - řeším zbývající jednosměrné exity po smazání roomy, to s tím
  souvisí.
- Asi by měl přibýt třetí stav exitu, tj. kromě one-way a two-way by mělo
    být něco jako "at least one-way"
  To ale budu řešit až v rámci automap módu.

Change color of svg:
https://css-tricks.com/change-color-of-svg-on-hover/

Room
-----

Ikona - svg image
  - tvar (square, circle) 

Exit
-----

Exit line (svg line)
Exit outline (širší svg line pod ní. Nebo možná outline attribute?)
Exit highlight (možná drop shadow?)



Workaround jak přidat outlinu k svg image:

#note-0 {
    outline: 6px solid white;
}

Možná drop-shadow přes filtry:
https://stackoverflow.com/questions/6088409/svg-drop-shadow-using-css3


------------------------------------------------------------------------------

Code counter extension:
https://marketplace.visualstudio.com/items?itemName=uctakeoff.vscode-counter

------------------------------------------------------------------------------

TODO: V title baru nefunguje "text-overflow: ellipsis;"
- tohle zatím odložím.
    Titlebar se roztahuje podle velikosti textu, takže ellipsis tam není
  potřeba, ale časem to určitě potřeba bude.

------------------------------------------------------------------------------

Socket class hierarchy
------------------------

TODO: Vymyslet, kam dát metody na zpracování packetů.


------------------------------------------------------------------------------

Zákaz spouštění package skriptů v npm:
---------------------------------------

npm config set ignore-scripts true


